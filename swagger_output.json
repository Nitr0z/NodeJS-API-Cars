{
  "swagger": "2.0",
  "info": {
    "version": "1.0.1",
    "title": "Cars API documentation",
    "description": "Our car API provides comprehensive information about various vehicles, including make, model, year, specifications, and more. With this API, you can easily search for any car, compare different models, and access accurate technical data to help with your research or project. Whether you're a car enthusiast, researcher, or developer, our API is designed to be a one-stop solution for all your car-related needs. Start exploring the world of cars today with our powerful and user-friendly API.",
    "termsOfService": "http://swagger.io/terms/",
    "author": "Th√©o Potier",
    "contact": {
      "email": "contact@cars-api.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "tags": [
      {
        "name": "Auth",
        "description": "Everything about your Pets",
        "externalDocs": {
          "description": "Find out more",
          "url": "http://swagger.io"
        }
      }
    ]
  },
  "host": "localhost:8080/v1",
  "servers": [
    {
      "url": "http://localhost:8080/v1/"
    }
  ],
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "securityDefinitions": {
    "bearerAuth": {
      "type": "apiKey",
      "name": "authorization",
      "scheme": "bearer",
      "bearerFormat": "JWT",
      "in": "header"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Service to register a new user into cars api",
        "description": "Service to register a new user into cars api",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                },
                "firstName": {
                  "example": "any"
                },
                "lastName": {
                  "example": "any"
                },
                "phoneNumber": {
                  "example": "any"
                },
                "address": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sign-in": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Service to register a new user into api & get jwt token for stateless auth",
        "description": "Service to register a new user into api & get jwt token for stateless auth",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/me": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Service to get authenticated user data",
        "description": "Service to register a new user into api & get jwt token for stateless auth",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/cars/add": {
      "post": {
        "tags": [
          "Cars"
        ],
        "summary": "Service to register a new car",
        "description": "Service to register a new car",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "model": {
                  "example": "any"
                },
                "brand": {
                  "example": "any"
                },
                "year": {
                  "example": "any"
                },
                "price": {
                  "example": "any"
                },
                "description": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/cars/update/{id}": {
      "put": {
        "tags": [
          "Cars"
        ],
        "summary": "Service to update a car",
        "description": "Service to update a car",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "model": {
                  "example": "any"
                },
                "brand": {
                  "example": "any"
                },
                "year": {
                  "example": "any"
                },
                "price": {
                  "example": "any"
                },
                "description": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/cars/delete/{id}": {
      "delete": {
        "tags": [
          "Cars"
        ],
        "summary": "Service to delete a car",
        "description": "Service to delete a car",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/cars/delete": {
      "delete": {
        "tags": [
          "Cars"
        ],
        "summary": "Service to delete all cars",
        "description": "Service to delete all cars",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/cars/get/{id}": {
      "get": {
        "tags": [
          "Cars"
        ],
        "summary": "Service to get a car",
        "description": "Service to get a car",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/cars/get": {
      "get": {
        "tags": [
          "Cars"
        ],
        "summary": "Service to get all cars",
        "description": "Service to get all cars",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/colors/add": {
      "post": {
        "tags": [
          "Colors"
        ],
        "summary": "Service to register a new color",
        "description": "Service to register a new color",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "brand": {
                  "example": "any"
                },
                "year": {
                  "example": "any"
                },
                "name": {
                  "example": "any"
                },
                "hex": {
                  "example": "any"
                },
                "description": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/colors/update/{id}": {
      "put": {
        "tags": [
          "Colors"
        ],
        "summary": "Service to update a color",
        "description": "Service to update a color",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "brand": {
                  "example": "any"
                },
                "year": {
                  "example": "any"
                },
                "name": {
                  "example": "any"
                },
                "hex": {
                  "example": "any"
                },
                "description": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/colors/delete/{id}": {
      "delete": {
        "tags": [
          "Colors"
        ],
        "summary": "Service to delete a color",
        "description": "Service to delete a color",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/colors/delete": {
      "delete": {
        "tags": [
          "Colors"
        ],
        "summary": "Service to delete all colors",
        "description": "Service to delete all colors",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/colors/get/{id}": {
      "get": {
        "tags": [
          "Colors"
        ],
        "summary": "Service to get a color",
        "description": "Service to get a color",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/colors/get": {
      "get": {
        "tags": [
          "Colors"
        ],
        "summary": "Service to get all colors",
        "description": "Service to get all colors",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/garages/add": {
      "post": {
        "tags": [
          "Garages"
        ],
        "summary": "Service to register a new garage",
        "description": "Service to register a new garage",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "address": {
                  "example": "any"
                },
                "city": {
                  "example": "any"
                },
                "postalCode": {
                  "example": "any"
                },
                "phone": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "website": {
                  "example": "any"
                },
                "description": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/garages/update/{id}": {
      "put": {
        "tags": [
          "Garages"
        ],
        "summary": "Service to update a garage",
        "description": "Service to update a garage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "address": {
                  "example": "any"
                },
                "city": {
                  "example": "any"
                },
                "postalCode": {
                  "example": "any"
                },
                "phone": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "website": {
                  "example": "any"
                },
                "description": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/garages/delete/{id}": {
      "delete": {
        "tags": [
          "Garages"
        ],
        "summary": "Service to delete a garage",
        "description": "Service to delete a garage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/garages/delete": {
      "delete": {
        "tags": [
          "Garages"
        ],
        "summary": "Service to delete all garages",
        "description": "Service to delete all garages",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/garages/get/{id}": {
      "get": {
        "tags": [
          "Garages"
        ],
        "summary": "Service to get a garage",
        "description": "Service to get a garage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/garages/get": {
      "get": {
        "tags": [
          "Garages"
        ],
        "summary": "Service to get all garages",
        "description": "Service to get all garages",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/options/add": {
      "post": {
        "tags": [
          "Options"
        ],
        "summary": "Service to register a new option",
        "description": "Service to register a new option",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "brand": {
                  "example": "any"
                },
                "code": {
                  "example": "any"
                },
                "name": {
                  "example": "any"
                },
                "description": {
                  "example": "any"
                },
                "year": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/options/update/{id}": {
      "put": {
        "tags": [
          "Options"
        ],
        "summary": "Service to update a option",
        "description": "Service to update a option",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "brand": {
                  "example": "any"
                },
                "code": {
                  "example": "any"
                },
                "name": {
                  "example": "any"
                },
                "description": {
                  "example": "any"
                },
                "year": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/options/delete/{id}": {
      "delete": {
        "tags": [
          "Options"
        ],
        "summary": "Service to delete a option",
        "description": "Service to delete a option",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/options/delete": {
      "delete": {
        "tags": [
          "Options"
        ],
        "summary": "Service to delete all options",
        "description": "Service to delete all options",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/options/get/{id}": {
      "get": {
        "tags": [
          "Options"
        ],
        "summary": "Service to get a option",
        "description": "Service to get a option",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/options/get": {
      "get": {
        "tags": [
          "Options"
        ],
        "summary": "Service to get all options",
        "description": "Service to get all options",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/rims/add": {
      "post": {
        "tags": [
          "Rims"
        ],
        "summary": "Service to register a new rim",
        "description": "Service to register a new rim",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "model": {
                  "example": "any"
                },
                "brand": {
                  "example": "any"
                },
                "year": {
                  "example": "any"
                },
                "size": {
                  "example": "any"
                },
                "price": {
                  "example": "any"
                },
                "description": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/rims/update/{id}": {
      "put": {
        "tags": [
          "Rims"
        ],
        "summary": "Service to update a rim",
        "description": "Service to update a rim",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "model": {
                  "example": "any"
                },
                "brand": {
                  "example": "any"
                },
                "year": {
                  "example": "any"
                },
                "size": {
                  "example": "any"
                },
                "price": {
                  "example": "any"
                },
                "description": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/rims/delete/{id}": {
      "delete": {
        "tags": [
          "Rims"
        ],
        "summary": "Service to delete a rim",
        "description": "Service to delete a rim",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/rims/delete": {
      "delete": {
        "tags": [
          "Rims"
        ],
        "summary": "Service to delete all rims",
        "description": "Service to delete all rims",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/rims/get/{id}": {
      "get": {
        "tags": [
          "Rims"
        ],
        "summary": "Service to get a rim",
        "description": "Service to get a rim",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/rims/get": {
      "get": {
        "tags": [
          "Rims"
        ],
        "summary": "Service to get all rims",
        "description": "Service to get all rims",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/consumers/add": {
      "post": {
        "tags": [
          "Consumers"
        ],
        "summary": "Service to register a new consumer",
        "description": "Service to register a new consumer",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "phone": {
                  "example": "any"
                },
                "address": {
                  "example": "any"
                },
                "city": {
                  "example": "any"
                },
                "zipCode": {
                  "example": "any"
                },
                "country": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/consumers/update/{id}": {
      "put": {
        "tags": [
          "Consumers"
        ],
        "summary": "Service to update a consumer",
        "description": "Service to update a consumer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "phone": {
                  "example": "any"
                },
                "address": {
                  "example": "any"
                },
                "city": {
                  "example": "any"
                },
                "zipCode": {
                  "example": "any"
                },
                "country": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/consumers/delete/{id}": {
      "delete": {
        "tags": [
          "Consumers"
        ],
        "summary": "Service to delete a consumer",
        "description": "Service to delete a consumer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/consumers/delete": {
      "delete": {
        "tags": [
          "Consumers"
        ],
        "summary": "Service to delete all consumers",
        "description": "Service to delete all consumers",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/consumers/get/{id}": {
      "get": {
        "tags": [
          "Consumers"
        ],
        "summary": "Service to get a consumer",
        "description": "Service to get a consumer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/consumers/get": {
      "get": {
        "tags": [
          "Consumers"
        ],
        "summary": "Service to get all consumers",
        "description": "Service to get all consumers",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    }
  }
}